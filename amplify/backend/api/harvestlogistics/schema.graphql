# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User @model {
    id: ID!
    userName: String!
    email: String!
    phone: String!

    vehicle: Vehicle @hasOne(fields: ["id"])
    geofenceSettings: GeofenceSetting @hasOne(fields: ["id"])
    isActive: Boolean
    
    operation_created: AWSJSON
    operation_invited: AWSJSON
}

type Vehicle @model {
        id: ID!
        userID: ID! @primaryKey
        userMail: String! 

        type: String!
        latitude: Float,
        longitude: Float,
        heading: Float,
        fillLevel: Int
        HeadingToCombine: Boolean
}

type Connection @model {
    id: ID!
    driverOne_UserID: ID!
    driverTwo_UserID: ID!
    driverOne_UserProfile: User @hasOne(fields: ["driverOne_UserID"])
    driverTwo_UserProfile: User @hasOne(fields: ["driverTwo_UserID"])
    driverOne_Message: String
    driverTwo_Message: String
}

type ActivityOverview @model {
    id: ID!
    activeUsers: [User] 
    inActiveUsers: [User]
}

type cords @model {
    latitude: String!
    longitude: String!
}

type Place @model {
    id: ID!
    name: String!
    created_By_User_With_ID: ID! 
    created_By_User: User @hasOne(fields: ["created_By_User_With_ID"])
    placeCords: AWSJSON
}

type GeofenceSetting @model {
        id: ID!
        userID: ID! @primaryKey
        

        geofenceName: String,
        geofenceRadius: Int, 
        geofence_latitude: Float,
        geofence_longitude: Float,
}

type Participant @model {
    OperationId: ID! @primaryKey
    UserId: ID!
    VehicleType: String!
}

type Operation @model {
        id: ID!
        CreatorId: ID!
        OperationName: String!,
        Participants: AWSJSON
}